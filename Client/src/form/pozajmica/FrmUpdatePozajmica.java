/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package form.pozajmica;

import communication.Communication;
import controller.ClientController;
import domain.Bibliotekar;
import domain.Clan;
import domain.Knjiga;
import domain.Pozajmica;
import domain.StavkaPozajmice;
import form.FrmMain;
import form.components.TableModelClan;
import form.components.TableModelKnjiga;
import form.components.TableModelStavke;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Korisnik
 */
public class FrmUpdatePozajmica extends javax.swing.JDialog {

    /**
     * Creates new form FrmUpdatePozajmica
     */
    Pozajmica pozajmica;
    Clan clan;
    Bibliotekar ulogovani;
    Knjiga knjiga;
    private FrmMain frmMain;
    public FrmUpdatePozajmica(java.awt.Frame parent, boolean modal, Pozajmica pozajmica) {
       super(parent, modal);
        try {
            initComponents();
            setLocationRelativeTo(null);
            setTitle("Izmeni uslugu");
            
            this.pozajmica=pozajmica;
            this.clan=pozajmica.getClan();
            this.ulogovani= Communication.getInstance().getUlogovani();
            lblUlogovani.setText("Ulogovani: "+ulogovani);
            if (parent instanceof FrmMain) {
                this.frmMain = (FrmMain) parent; 
            }
            
            tblKnjiga.setModel(new TableModelKnjiga());
            prepareView();
            
        } catch (Exception ex) {
            Logger.getLogger(FrmUpdatePozajmica.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblUlogovani = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        txtPretragaClan = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblClan = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtClan = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtDatumOd = new javax.swing.JFormattedTextField();
        txtDatumDo = new javax.swing.JFormattedTextField();
        jPanel3 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        txtPretragaKnjige = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblKnjiga = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblStavka = new javax.swing.JTable();
        btnDodaj = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lblUlogovani.setText("Ulogovani bibliotekar:");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Pozajmica"));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Pretraga clana"));

        txtPretragaClan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPretragaClanKeyReleased(evt);
            }
        });

        tblClan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblClan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblClanMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblClan);

        jLabel1.setText("Izabrani clan:");

        jLabel2.setText("Datum od:");

        jLabel3.setText("Datum do:");

        txtDatumOd.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat(""))));

        txtDatumDo.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd.MM.yyyy"))));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(84, 84, 84)
                        .addComponent(txtClan))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPretragaClan, javax.swing.GroupLayout.PREFERRED_SIZE, 454, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 9, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(101, 101, 101)
                        .addComponent(txtDatumOd))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(101, 101, 101)
                        .addComponent(txtDatumDo)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtPretragaClan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtClan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(txtDatumOd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(txtDatumDo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Stavka pozajmice"));

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Pretraga knjige"));

        txtPretragaKnjige.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPretragaKnjigeKeyReleased(evt);
            }
        });

        tblKnjiga.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblKnjiga);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtPretragaKnjige)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 498, Short.MAX_VALUE))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtPretragaKnjige, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tblStavka.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(tblStavka);

        btnDodaj.setText("Dodaj stavku");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obrisi stavku");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 340, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnDodaj)
                            .addComponent(btnObrisi))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnDodaj)
                        .addGap(18, 18, 18)
                        .addComponent(btnObrisi))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        btnIzmeni.setText("Azuriraj pozajmicu");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(448, 448, 448)
                .addComponent(btnIzmeni)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnIzmeni)
                .addGap(74, 74, 74))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUlogovani)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblUlogovani)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 528, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPretragaClanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPretragaClanKeyReleased
        String parametar = txtPretragaClan.getText();
        TableModelClan tmClan = (TableModelClan) tblClan.getModel();
        tmClan.setParametar(parametar);
        if (tmClan.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this,
                "Sistem ne moze da nadje clanove po zadatoj vrednosti",
                "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_txtPretragaClanKeyReleased

    private void tblClanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblClanMouseClicked
        int selectedRow=tblClan.getSelectedRow();

        if(selectedRow>-1){
            TableModelClan tmc= (TableModelClan) tblClan.getModel();
            clan=tmc.getListItem(selectedRow);
            txtClan.setText(clan.toString());
        }
    }//GEN-LAST:event_tblClanMouseClicked

    private void txtPretragaKnjigeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPretragaKnjigeKeyReleased
        String parametar = txtPretragaKnjige.getText();
        TableModelKnjiga tmKnjiga = (TableModelKnjiga) tblKnjiga.getModel();
        tmKnjiga.setParametar(parametar);
        if (tmKnjiga.getRowCount() == 0) {
            JOptionPane.showMessageDialog(this,
                "Sistem ne moze da nadje knjige po zadatoj vrednosti",
                "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }//GEN-LAST:event_txtPretragaKnjigeKeyReleased

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        TableModelKnjiga tmk = (TableModelKnjiga) tblKnjiga.getModel();
        int selectedRow = tblKnjiga.getSelectedRow();
        if (selectedRow >= 0) {
            try {
                knjiga = tmk.getKnjiga(selectedRow);
                if(knjiga.getKolicina()<=0){
                    JOptionPane.showMessageDialog(this, "Sistem ne moze da doda stavku.","Error",
                        JOptionPane.ERROR_MESSAGE);
                    return;
                }
                StavkaPozajmice stavka = new StavkaPozajmice(null, knjiga,-1);

                TableModelStavke tms = (TableModelStavke) tblStavka.getModel();
                if (tms.getRowCount() > 0) {
                    if (tms.postojiKnjiga(knjiga)) {
                        JOptionPane.showMessageDialog(this, "Vec ste uneli ovu knjigu!","Error",JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                }
                tms.dodajStavku(stavka);
                tmk.smanjiKolicinu(selectedRow);
               tmk.fireTableDataChanged();

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Sistem ne moze da ucita stavku.", "Error", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(FrmMain.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da ucita stavku.","Error",
                JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        TableModelStavke tmStavke = (TableModelStavke) tblStavka.getModel();
        int rowIndex = tblStavka.getSelectedRow();
        if (rowIndex >= 0) {
            StavkaPozajmice stavka= tmStavke.getStavkaPozajmice(rowIndex);
            //knjiga=stavka.getKnjiga();
            TableModelKnjiga tmk = (TableModelKnjiga) tblKnjiga.getModel();
            tmk.povecajKolicinu(stavka.getKnjiga());
          
            tmStavke.deleteStavka(rowIndex);
            //tmk.refreshTable();
             //tmk.fireTableDataChanged();

        } else {
            JOptionPane.showMessageDialog(this, "Sistem ne moze da obrise stavku","Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        try {

            SimpleDateFormat sdf=new SimpleDateFormat("dd.MM.yyyy");
            TableModelStavke tmStavke= (TableModelStavke) tblStavka.getModel();

            
            Pozajmica p=new Pozajmica(pozajmica.getId(), clan, ulogovani, sdf.parse(txtDatumOd.getText()),
                    sdf.parse(txtDatumDo.getText()),(ArrayList<StavkaPozajmice>) tmStavke.getListaStavki());
            

            if(txtClan.getText().isEmpty() || txtDatumOd.getText().isEmpty() ||
                txtDatumDo.getText().isEmpty()){
                JOptionPane.showMessageDialog(this,"Sistem ne moze da izmeni pozajmicu","Error",
                    JOptionPane.ERROR_MESSAGE);
                return;
            }

            if(tblStavka.getRowCount()==0){
                JOptionPane.showMessageDialog(this,"Sistem ne moze da izmeni pozajmicu","Error",
                    JOptionPane.ERROR_MESSAGE);
                return;
            }

            ClientController.getInstance().updatePozajmica(p);
            //ClientController.getInstance().updateKnjiga(knjiga);
            JOptionPane.showMessageDialog(this,"Sistem je izmenio pozajmicu");
            
            if (frmMain != null) {
            frmMain.refreshTableKnjiga();
        }
            this.dispose();

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this,"Sistem ne moze da izmeni pozajmicu","Error",
                JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(FrmUpdatePozajmica.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnIzmeniActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblUlogovani;
    private javax.swing.JTable tblClan;
    private javax.swing.JTable tblKnjiga;
    private javax.swing.JTable tblStavka;
    private javax.swing.JTextField txtClan;
    private javax.swing.JFormattedTextField txtDatumDo;
    private javax.swing.JFormattedTextField txtDatumOd;
    private javax.swing.JTextField txtPretragaClan;
    private javax.swing.JTextField txtPretragaKnjige;
    // End of variables declaration//GEN-END:variables

    private void prepareView() {
        try {
            SimpleDateFormat sdf=new SimpleDateFormat("dd.MM.yyyy");
            txtClan.setText(clan.toString());
            txtDatumOd.setText(sdf.format(pozajmica.getDatumIzdavanja()));
            txtDatumDo.setText(sdf.format(pozajmica.getRokVracanja()));
            tblClan.setModel(new TableModelClan());
            tblKnjiga.setModel(new TableModelKnjiga());
            
            if (pozajmica.getListaStavki() != null) {
            for (StavkaPozajmice s : pozajmica.getListaStavki()) {
                Knjiga k = s.getKnjiga();
                System.out.println("Stavka RB: " + s.getRbStavke());
                System.out.println("Naslov: " + k.getNaslov());
                System.out.println("Autor: " + k.getAutor().getIme() + " " + k.getAutor().getPrezime());
                System.out.println("Izdavač: " + k.getIzdavac());
                System.out.println("Godina izdanja: " + k.getGodinaIzdanja());
                System.out.println("Zanr: " + k.getZanr());
                System.out.println("-------------------------");
            }
        }
            TableModelStavke tmStavke=new TableModelStavke();
            tmStavke.setListaStavki(pozajmica.getListaStavki());
            tblStavka.setModel(tmStavke);
        } catch (Exception ex) {
            Logger.getLogger(FrmUpdatePozajmica.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
}
